// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/photos/library/v1/photos_library.proto

package com.google.photos.library.v1.proto;

/**
 *
 *
 * <pre>
 * Request to make an album shared in Google Photos.
 * </pre>
 *
 * Protobuf type {@code google.photos.library.v1.ShareAlbumRequest}
 */
public final class ShareAlbumRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.photos.library.v1.ShareAlbumRequest)
    ShareAlbumRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ShareAlbumRequest.newBuilder() to construct.
  private ShareAlbumRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ShareAlbumRequest() {
    albumId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ShareAlbumRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_ShareAlbumRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.photos.library.v1.proto.LibraryServiceProto
        .internal_static_google_photos_library_v1_ShareAlbumRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.photos.library.v1.proto.ShareAlbumRequest.class,
            com.google.photos.library.v1.proto.ShareAlbumRequest.Builder.class);
  }

  public static final int ALBUM_ID_FIELD_NUMBER = 1;

  @SuppressWarnings("serial")
  private volatile java.lang.Object albumId_ = "";
  /**
   *
   *
   * <pre>
   * Required. Identifier of the album to be shared. This `albumId` must belong
   * to an album created by the developer.
   * </pre>
   *
   * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The albumId.
   */
  @java.lang.Override
  public java.lang.String getAlbumId() {
    java.lang.Object ref = albumId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      albumId_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. Identifier of the album to be shared. This `albumId` must belong
   * to an album created by the developer.
   * </pre>
   *
   * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   *
   * @return The bytes for albumId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getAlbumIdBytes() {
    java.lang.Object ref = albumId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      albumId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHARED_ALBUM_OPTIONS_FIELD_NUMBER = 2;
  private com.google.photos.types.proto.SharedAlbumOptions sharedAlbumOptions_;
  /**
   *
   *
   * <pre>
   * Options to be set when converting the album to a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
   *
   * @return Whether the sharedAlbumOptions field is set.
   */
  @java.lang.Override
  public boolean hasSharedAlbumOptions() {
    return sharedAlbumOptions_ != null;
  }
  /**
   *
   *
   * <pre>
   * Options to be set when converting the album to a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
   *
   * @return The sharedAlbumOptions.
   */
  @java.lang.Override
  public com.google.photos.types.proto.SharedAlbumOptions getSharedAlbumOptions() {
    return sharedAlbumOptions_ == null
        ? com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance()
        : sharedAlbumOptions_;
  }
  /**
   *
   *
   * <pre>
   * Options to be set when converting the album to a shared album.
   * </pre>
   *
   * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
   */
  @java.lang.Override
  public com.google.photos.types.proto.SharedAlbumOptionsOrBuilder
      getSharedAlbumOptionsOrBuilder() {
    return sharedAlbumOptions_ == null
        ? com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance()
        : sharedAlbumOptions_;
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(albumId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, albumId_);
    }
    if (sharedAlbumOptions_ != null) {
      output.writeMessage(2, getSharedAlbumOptions());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(albumId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, albumId_);
    }
    if (sharedAlbumOptions_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getSharedAlbumOptions());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.photos.library.v1.proto.ShareAlbumRequest)) {
      return super.equals(obj);
    }
    com.google.photos.library.v1.proto.ShareAlbumRequest other =
        (com.google.photos.library.v1.proto.ShareAlbumRequest) obj;

    if (!getAlbumId().equals(other.getAlbumId())) return false;
    if (hasSharedAlbumOptions() != other.hasSharedAlbumOptions()) return false;
    if (hasSharedAlbumOptions()) {
      if (!getSharedAlbumOptions().equals(other.getSharedAlbumOptions())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ALBUM_ID_FIELD_NUMBER;
    hash = (53 * hash) + getAlbumId().hashCode();
    if (hasSharedAlbumOptions()) {
      hash = (37 * hash) + SHARED_ALBUM_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSharedAlbumOptions().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.photos.library.v1.proto.ShareAlbumRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request to make an album shared in Google Photos.
   * </pre>
   *
   * Protobuf type {@code google.photos.library.v1.ShareAlbumRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.photos.library.v1.ShareAlbumRequest)
      com.google.photos.library.v1.proto.ShareAlbumRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_ShareAlbumRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_ShareAlbumRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.photos.library.v1.proto.ShareAlbumRequest.class,
              com.google.photos.library.v1.proto.ShareAlbumRequest.Builder.class);
    }

    // Construct using com.google.photos.library.v1.proto.ShareAlbumRequest.newBuilder()
    private Builder() {}

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      albumId_ = "";
      sharedAlbumOptions_ = null;
      if (sharedAlbumOptionsBuilder_ != null) {
        sharedAlbumOptionsBuilder_.dispose();
        sharedAlbumOptionsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.photos.library.v1.proto.LibraryServiceProto
          .internal_static_google_photos_library_v1_ShareAlbumRequest_descriptor;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.ShareAlbumRequest getDefaultInstanceForType() {
      return com.google.photos.library.v1.proto.ShareAlbumRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.ShareAlbumRequest build() {
      com.google.photos.library.v1.proto.ShareAlbumRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.photos.library.v1.proto.ShareAlbumRequest buildPartial() {
      com.google.photos.library.v1.proto.ShareAlbumRequest result =
          new com.google.photos.library.v1.proto.ShareAlbumRequest(this);
      if (bitField0_ != 0) {
        buildPartial0(result);
      }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.photos.library.v1.proto.ShareAlbumRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.albumId_ = albumId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.sharedAlbumOptions_ =
            sharedAlbumOptionsBuilder_ == null
                ? sharedAlbumOptions_
                : sharedAlbumOptionsBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.photos.library.v1.proto.ShareAlbumRequest) {
        return mergeFrom((com.google.photos.library.v1.proto.ShareAlbumRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.photos.library.v1.proto.ShareAlbumRequest other) {
      if (other == com.google.photos.library.v1.proto.ShareAlbumRequest.getDefaultInstance())
        return this;
      if (!other.getAlbumId().isEmpty()) {
        albumId_ = other.albumId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasSharedAlbumOptions()) {
        mergeSharedAlbumOptions(other.getSharedAlbumOptions());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                albumId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
            case 18:
              {
                input.readMessage(
                    getSharedAlbumOptionsFieldBuilder().getBuilder(), extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
            default:
              {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int bitField0_;

    private java.lang.Object albumId_ = "";
    /**
     *
     *
     * <pre>
     * Required. Identifier of the album to be shared. This `albumId` must belong
     * to an album created by the developer.
     * </pre>
     *
     * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The albumId.
     */
    public java.lang.String getAlbumId() {
      java.lang.Object ref = albumId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        albumId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Identifier of the album to be shared. This `albumId` must belong
     * to an album created by the developer.
     * </pre>
     *
     * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return The bytes for albumId.
     */
    public com.google.protobuf.ByteString getAlbumIdBytes() {
      java.lang.Object ref = albumId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        albumId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. Identifier of the album to be shared. This `albumId` must belong
     * to an album created by the developer.
     * </pre>
     *
     * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The albumId to set.
     * @return This builder for chaining.
     */
    public Builder setAlbumId(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }
      albumId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Identifier of the album to be shared. This `albumId` must belong
     * to an album created by the developer.
     * </pre>
     *
     * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @return This builder for chaining.
     */
    public Builder clearAlbumId() {
      albumId_ = getDefaultInstance().getAlbumId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. Identifier of the album to be shared. This `albumId` must belong
     * to an album created by the developer.
     * </pre>
     *
     * <code>string album_id = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     *
     * @param value The bytes for albumId to set.
     * @return This builder for chaining.
     */
    public Builder setAlbumIdBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);
      albumId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.photos.types.proto.SharedAlbumOptions sharedAlbumOptions_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.types.proto.SharedAlbumOptions,
            com.google.photos.types.proto.SharedAlbumOptions.Builder,
            com.google.photos.types.proto.SharedAlbumOptionsOrBuilder>
        sharedAlbumOptionsBuilder_;
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     *
     * @return Whether the sharedAlbumOptions field is set.
     */
    public boolean hasSharedAlbumOptions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     *
     * @return The sharedAlbumOptions.
     */
    public com.google.photos.types.proto.SharedAlbumOptions getSharedAlbumOptions() {
      if (sharedAlbumOptionsBuilder_ == null) {
        return sharedAlbumOptions_ == null
            ? com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance()
            : sharedAlbumOptions_;
      } else {
        return sharedAlbumOptionsBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public Builder setSharedAlbumOptions(com.google.photos.types.proto.SharedAlbumOptions value) {
      if (sharedAlbumOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sharedAlbumOptions_ = value;
      } else {
        sharedAlbumOptionsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public Builder setSharedAlbumOptions(
        com.google.photos.types.proto.SharedAlbumOptions.Builder builderForValue) {
      if (sharedAlbumOptionsBuilder_ == null) {
        sharedAlbumOptions_ = builderForValue.build();
      } else {
        sharedAlbumOptionsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public Builder mergeSharedAlbumOptions(com.google.photos.types.proto.SharedAlbumOptions value) {
      if (sharedAlbumOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)
            && sharedAlbumOptions_ != null
            && sharedAlbumOptions_
                != com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance()) {
          getSharedAlbumOptionsBuilder().mergeFrom(value);
        } else {
          sharedAlbumOptions_ = value;
        }
      } else {
        sharedAlbumOptionsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public Builder clearSharedAlbumOptions() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sharedAlbumOptions_ = null;
      if (sharedAlbumOptionsBuilder_ != null) {
        sharedAlbumOptionsBuilder_.dispose();
        sharedAlbumOptionsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public com.google.photos.types.proto.SharedAlbumOptions.Builder getSharedAlbumOptionsBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getSharedAlbumOptionsFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    public com.google.photos.types.proto.SharedAlbumOptionsOrBuilder
        getSharedAlbumOptionsOrBuilder() {
      if (sharedAlbumOptionsBuilder_ != null) {
        return sharedAlbumOptionsBuilder_.getMessageOrBuilder();
      } else {
        return sharedAlbumOptions_ == null
            ? com.google.photos.types.proto.SharedAlbumOptions.getDefaultInstance()
            : sharedAlbumOptions_;
      }
    }
    /**
     *
     *
     * <pre>
     * Options to be set when converting the album to a shared album.
     * </pre>
     *
     * <code>.google.photos.types.SharedAlbumOptions shared_album_options = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.photos.types.proto.SharedAlbumOptions,
            com.google.photos.types.proto.SharedAlbumOptions.Builder,
            com.google.photos.types.proto.SharedAlbumOptionsOrBuilder>
        getSharedAlbumOptionsFieldBuilder() {
      if (sharedAlbumOptionsBuilder_ == null) {
        sharedAlbumOptionsBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.photos.types.proto.SharedAlbumOptions,
                com.google.photos.types.proto.SharedAlbumOptions.Builder,
                com.google.photos.types.proto.SharedAlbumOptionsOrBuilder>(
                getSharedAlbumOptions(), getParentForChildren(), isClean());
        sharedAlbumOptions_ = null;
      }
      return sharedAlbumOptionsBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.photos.library.v1.ShareAlbumRequest)
  }

  // @@protoc_insertion_point(class_scope:google.photos.library.v1.ShareAlbumRequest)
  private static final com.google.photos.library.v1.proto.ShareAlbumRequest DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.photos.library.v1.proto.ShareAlbumRequest();
  }

  public static com.google.photos.library.v1.proto.ShareAlbumRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ShareAlbumRequest> PARSER =
      new com.google.protobuf.AbstractParser<ShareAlbumRequest>() {
        @java.lang.Override
        public ShareAlbumRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

  public static com.google.protobuf.Parser<ShareAlbumRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ShareAlbumRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.photos.library.v1.proto.ShareAlbumRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
